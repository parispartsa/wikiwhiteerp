# 📋 Cursor Rules - Documentação White ERP

## 🎯 Objetivo
Padronizar a criação e manutenção da documentação do usuário final do White ERP, garantindo consistência, qualidade e usabilidade em todos os documentos, seguindo as melhores práticas do GitBook.

## 📚 Estrutura de Documentação

### 🏗️ Arquitetura de Pastas
```
usuario-final/
├── .gitbook.yaml              # Configuração do GitBook
├── SUMMARY.md                 # Índice de navegação (OBRIGATÓRIO)
├── index.md                   # Página inicial
├── assets/                    # Recursos visuais
│   ├── diagrams/             # Diagramas Mermaid
│   ├── images/               # Imagens e screenshots
│   └── videos/               # Vídeos tutoriais
├── casos-uso/                # Casos práticos por segmento
│   ├── comercio-geral/       # Comércio varejista
│   ├── petshop/              # Petshops
│   ├── prestacao-servicos/   # Prestadores de serviços
│   └── contabilidade/        # Contabilidade
├── fluxos/                   # Processos completos
├── guias/                    # Guias iniciais
├── modulos/                  # Documentação por módulo
│   ├── cadastros/            # Gestão de cadastros
│   ├── vendas/               # Gestão de vendas
│   ├── estoque/              # Controle de estoque
│   ├── financeiro/           # Gestão financeira
│   └── [outros-modulos]/     # Outros módulos
└── relatorios/               # Relatórios e dashboards
```

### 📄 Tipos de Documentos

#### 1. **Módulos do Sistema** (`modulos/`)
- Documentação funcional de cada módulo
- Foco em "como fazer" passo a passo
- Exemplos práticos e casos de uso

#### 2. **Fluxos de Trabalho** (`fluxos/`)
- Processos completos de negócio
- Integração entre módulos
- Visão end-to-end

#### 3. **Casos de Uso** (`casos-uso/`)
- Cenários práticos por segmento
- Histórias de usuário
- Exemplos contextualizados

#### 4. **Guias Iniciais** (`guias/`)
- Onboarding de novos usuários
- Configuração inicial
- Primeiros passos

## 🎨 Padrões de Formatação GitBook

### 📝 Estrutura de Cabeçalho (OBRIGATÓRIO)
```markdown
# 🎯 [Emoji] Título do Documento

🏠 [Home](../../index.md) > 📋 [Seção](../index.md) > **Documento Atual**

#tag1 #tag2 #tag3 #categoria #nivel

---
```

### 🏷️ Sistema de Tags (OBRIGATÓRIO)
**Tags por Categoria:**
- **Módulo**: `#cadastros` `#vendas` `#estoque` `#financeiro` `#configuracoes`
- **Nível**: `#iniciante` `#intermediario` `#avançado`
- **Tipo**: `#passo-a-passo` `#caso-uso` `#fluxo` `#configuracao`
- **Importância**: `#importante` `#obrigatorio` `#opcional`
- **Contexto**: `#automatico` `#manual` `#integracao`

### 📋 Estrutura de Seções

#### Para Módulos:
```markdown
## 📋 O que é
[Descrição clara da funcionalidade]

## 🚀 Como Fazer
[Passo a passo detalhado]

## 🔧 Funcionalidades Avançadas
[Recursos adicionais]

## 💡 Casos de Uso
[Exemplos práticos]

## 🔍 Busca e Filtros
[Como encontrar informações]

## 📊 Relatórios Disponíveis
[Relatórios relacionados]

## 🚨 Alertas e Validações
[Avisos importantes]

## 🔐 Permissões e Segurança
[Controle de acesso]
```

#### Para Fluxos:
```markdown
## 🎯 Visão Geral do Fluxo
[Objetivo e benefícios]

## 🔄 Visão Geral do Processo
[Diagrama Mermaid obrigatório]

## 📋 Etapas Detalhadas
[Cada etapa numerada]

## 🔧 Configurações Necessárias
[Pré-requisitos]

## 💡 Dicas e Boas Práticas
[Otimizações]

## 🚨 Pontos de Atenção
[Cuidados especiais]
```

#### Para Casos de Uso:
```markdown
## 🎯 Cenário do Caso
[Situação, personagens, objetivo]

## 📋 Contexto Detalhado
[Informações do negócio]

## 🔄 Fluxo do Atendimento
[Processo passo a passo]

## 📊 Resultados Esperados
[Benefícios alcançados]

## 🔧 Configurações Utilizadas
[Setup necessário]

## 💡 Lições Aprendidas
[Insights importantes]
```

## 🎨 Padrões Visuais GitBook

### 🎯 Emojis Padronizados
- **📋** - Listas, processos, documentos
- **🎯** - Objetivos, metas, foco
- **🚀** - Início, primeiros passos, ações
- **💡** - Dicas, ideias, casos de uso
- **⚠️** - Atenção, cuidados, alertas
- **✅** - Confirmação, sucesso, validação
- **🔧** - Configurações, ferramentas, ajustes
- **📊** - Relatórios, análises, dados
- **🔄** - Fluxos, processos, ciclos
- **💰** - Financeiro, valores, pagamentos
- **👥** - Clientes, usuários, pessoas
- **📦** - Produtos, estoque, itens
- **🏪** - Comércio, vendas, loja
- **🔐** - Segurança, permissões, acesso

### 📝 Formatação de Texto GitBook
- **Negrito**: Para destacar ações importantes (`**texto**`)
- *Itálico*: Para termos técnicos (`*texto*` ou `_texto_`)
- `Código`: Para nomes de campos, botões, menus (`` `texto` ``)
- ~~Riscado~~: Para texto obsoleto (`~~texto~~`)
- > Citações: Para dicas importantes (`> texto`)

### 🎨 Blocos Especiais GitBook

#### 📋 Hints (Blocos de Destaque)
```markdown
{% hint style="info" %}
**💡 Dica**: Informações úteis para otimizar o uso
{% endhint %}

{% hint style="warning" %}
**⚠️ Atenção**: Cuidados importantes a serem observados
{% endhint %}

{% hint style="success" %}
**✅ Sucesso**: Confirmação de ação realizada
{% endhint %}

{% hint style="danger" %}
**🚨 Perigo**: Alertas críticos sobre ações destrutivas
{% endhint %}
```

#### 📑 Tabs (Abas)
```markdown
{% tabs %}
{% tab title="Windows" %}
Instruções para Windows
{% endtab %}

{% tab title="macOS" %}
Instruções para macOS
{% endtab %}

{% tab title="Linux" %}
Instruções para Linux
{% endtab %}
{% endtabs %}
```

#### 📋 Stepper (Passo a Passo)
```markdown
{% stepper %}
{% step %}
### Passo 1: Preparação
Descrição do primeiro passo
{% endstep %}

{% step %}
### Passo 2: Execução
Descrição do segundo passo
{% endstep %}

{% step %}
### Passo 3: Finalização
Descrição do terceiro passo
{% endstep %}
{% endstepper %}
```

#### 📂 Expandable (Seções Expansíveis)
```markdown
<details>
<summary>Configurações Avançadas</summary>

Conteúdo das configurações avançadas que ficará oculto até ser clicado.

</details>
```

#### 📋 Task Lists (Listas de Tarefas)
```markdown
- [ ] Tarefa não concluída
- [x] Tarefa concluída
  - [ ] Subtarefa não concluída
  - [x] Subtarefa concluída
```

#### 🔗 Page Links (Links de Página)
```markdown
{% content-ref url="./documento-relacionado.md" %}
documento-relacionado.md
{% endcontent-ref %}
```

#### 💾 Code Blocks (Blocos de Código)
```markdown
{% code title="exemplo.js" overflow="wrap" lineNumbers="true" %}
```javascript
function exemplo() {
    console.log("Exemplo de código");
}
```
{% endcode %}
```

### 🖼️ Imagens GitBook

#### 📸 Imagem Simples
```markdown
![Descrição da imagem](caminho/para/imagem.png)
```

#### 📸 Imagem com Legenda
```markdown
<figure>
    <img src="caminho/para/imagem.png" alt="Descrição da imagem">
    <figcaption>Legenda da imagem</figcaption>
</figure>
```

#### 🌓 Imagem com Modo Claro/Escuro
```markdown
<figure>
    <picture>
        <source srcset="caminho/para/imagem-escura.png" media="(prefers-color-scheme: dark)">
        <img src="caminho/para/imagem-clara.png" alt="Descrição da imagem">
    </picture>
    <figcaption>Legenda da imagem</figcaption>
</figure>
```

#### 📏 Imagem Redimensionada
```markdown
<img src="caminho/para/imagem.png" alt="Descrição" width="300">
<!-- ou -->
<img src="caminho/para/imagem.png" alt="Descrição" width="50%">
```

### 📊 Tabelas GitBook

#### 📋 Tabela Básica
```markdown
| Coluna 1 | Coluna 2 | Coluna 3 |
|----------|----------|----------|
| Valor 1  | Valor 2  | Valor 3  |
| Valor 4  | Valor 5  | Valor 6  |
```

#### 📋 Tabela com Cards
```markdown
<table data-view="cards">
<thead>
<tr>
<th></th>
<th></th>
<th data-hidden data-card-target data-type="content-ref"></th>
<th data-hidden data-card-cover data-type="files"></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Título do Card</strong></td>
<td>Descrição do card</td>
<td><a href="link-destino.md">link-destino.md</a></td>
<td><a href="imagem-capa.png">imagem-capa.png</a></td>
</tr>
</tbody>
</table>
```

#### 📋 Tabela Largura Completa
```markdown
<table data-full-width="true">
<thead>
<tr>
<th>Projeto</th>
<th>Responsável</th>
<th data-type="rating" data-max="5">Avaliação</th>
</tr>
</thead>
<tbody>
<tr>
<td>Projeto A</td>
<td>João</td>
<td>4</td>
</tr>
</tbody>
</table>
```

## 🔄 Diagramas Mermaid (Compatível com GitBook)

### 📊 Obrigatório para Fluxos
```mermaid
graph TD
    A[Início] --> B[Processo]
    B --> C{Decisão}
    C -->|Sim| D[Ação 1]
    C -->|Não| E[Ação 2]
    D --> F[Fim]
    E --> F
```

### 🎯 Padrões de Diagramas Compatíveis com GitBook
- **Fluxogramas**: Para processos lineares (`graph TD` ou `graph LR`)
- **Diagramas de decisão**: Para fluxos condicionais (`graph TD` com decisões)
- **Diagramas de sequência**: Para interações entre sistemas (`sequenceDiagram`)
- **Diagramas de estado**: Para status de documentos (`stateDiagram-v2`)
- **Diagramas de classe**: Para estruturas de dados (`classDiagram`)
- **Diagramas de Gantt**: Para cronogramas (`gantt`)

### 📋 Diretrizes para Compatibilidade GitBook
- **Use sempre** a sintaxe Mermaid padrão
- **Evite** recursos experimentais ou beta
- **Teste** os diagramas no GitBook antes de publicar
- **Mantenha** simplicidade visual para melhor renderização
- **Use** cores padrão do Mermaid (evite cores customizadas)
- **Evite** caracteres especiais que possam causar problemas de renderização

### 🎨 Exemplos de Diagramas Compatíveis

#### Fluxograma Básico
```mermaid
graph TD
    A[Início] --> B[Ação]
    B --> C{Condição}
    C -->|Sim| D[Resultado A]
    C -->|Não| E[Resultado B]
    D --> F[Fim]
    E --> F
```

#### Diagrama de Sequência
```mermaid
sequenceDiagram
    participant U as Usuário
    participant S as Sistema
    participant D as Banco de Dados
    
    U->>S: Solicita dados
    S->>D: Consulta informações
    D->>S: Retorna dados
    S->>U: Exibe resultado
```

#### Diagrama de Estado
```mermaid
stateDiagram-v2
    [*] --> Rascunho
    Rascunho --> Aprovado: aprovar
    Aprovado --> Publicado: publicar
    Publicado --> Arquivado: arquivar
    Arquivado --> [*]
```

#### Diagrama de Classe
```mermaid
classDiagram
    class Usuario {
        +String nome
        +String email
        +login()
        +logout()
    }
    
    class Produto {
        +String codigo
        +String nome
        +Double preco
        +calcularDesconto()
    }
    
    Usuario --> Produto : compra
```

#### Diagrama de Gantt
```mermaid
gantt
    title Cronograma do Projeto
    dateFormat  YYYY-MM-DD
    section Planejamento
    Análise de Requisitos    :done, req, 2024-01-01, 2024-01-15
    Design da Solução        :active, design, 2024-01-10, 2024-01-25
    section Desenvolvimento
    Implementação            :impl, after design, 30d
    Testes                   :test, after impl, 15d
```

## 📝 Diretrizes de Redação

### 🎯 Tom e Linguagem
- **Tom**: Amigável, didático, profissional
- **Pessoa**: Segunda pessoa (você)
- **Linguagem**: Clara, objetiva, sem jargões técnicos
- **Público**: Usuário final não técnico

### 📋 Estrutura de Conteúdo
1. **Comece** com o contexto (o que é, para que serve)
2. **Siga** com o passo a passo prático
3. **Inclua** exemplos reais e contextualizados
4. **Termine** com dicas e informações complementares

### 🔍 Palavras-chave
- Use termos consistentes para a mesma funcionalidade
- Prefira "clique" a "pressione" para ações de mouse
- Use "digite" para entrada de dados
- Use "selecione" para escolhas em listas

## 🔗 Sistema de Links

### 📍 Navegação (OBRIGATÓRIO)
```markdown
🏠 [Home](../../index.md) > 📋 [Seção](../index.md) > **Documento Atual**
```

### 🔗 Links Internos
- **Sempre** use caminhos relativos
- **Inclua** links para documentos relacionados
- **Crie** seções de "Documentação Relacionada"

### 🔗 Links Externos
- **Evite** links externos quando possível
- **Se necessário**, marque claramente como externos

## 🏷️ Metadados GitBook

### 📄 Front Matter (YAML)
```markdown
---
title: Título da Página
description: Descrição da página para SEO
hidden: false
---
```

### 📊 Informações no Rodapé
```markdown
---

## 📚 Documentação Relacionada
- [Documento 1](../link1.md)
- [Documento 2](../link2.md)

## 🏷️ Tags
`#tag1` `#tag2` `#categoria` `#nivel`

---

**Última atualização**: [Data]
**Versão do documento**: [Versão]
**Responsável**: [Nome]
```

## 🎯 Boas Práticas GitBook

### ✅ Faça
- **Use** exemplos práticos e contextualizados
- **Inclua** screenshots quando necessário
- **Mantenha** consistência na formatação
- **Teste** todos os links internos
- **Revise** ortografia e gramática
- **Atualize** datas de modificação
- **Use** blocos especiais do GitBook (hints, tabs, steppers)
- **Teste** diagramas Mermaid antes de publicar
- **Mantenha** hierarquia clara no SUMMARY.md

### ❌ Evite
- **Jargões** técnicos sem explicação
- **Parágrafos** muito longos
- **Informações** desatualizadas
- **Links** quebrados
- **Formatação** inconsistente
- **Conteúdo** duplicado
- **Recursos experimentais** do Mermaid
- **Cores customizadas** em diagramas
- **Caracteres especiais** problemáticos

## 🔧 Configuração GitBook

### 📋 Arquivo .gitbook.yaml
```yaml
root: ./

structure:
  readme: index.md
  summary: SUMMARY.md

redirects:
  pagina-antiga: nova-pagina.md
  secao-antiga/: nova-secao/
```

### 📋 Estrutura SUMMARY.md
```markdown
# Summary

## 🏠 Página Inicial
* [📋 White ERP - Documentação](index.md)

## 🚀 Guias Iniciais
* [📚 Guias do White ERP](guias/index.md)
  * [🚀 Primeiros Passos](guias/primeiros-passos.md)
  * [⚙️ Configuração Inicial](guias/configuracao-inicial.md)

## 📋 Módulos do Sistema
* [📋 Módulos do Sistema](modulos/index.md)
  * [👥 Gestão de Cadastros](modulos/cadastros/index.md)
    * [👥 Cadastro de Clientes](modulos/cadastros/cadastro-de-clientes.md)
```

## 🔧 Ferramentas e Validação

### 📋 Checklist de Qualidade GitBook
- [ ] Título claro e descritivo
- [ ] Navegação breadcrumb presente
- [ ] Tags apropriadas incluídas
- [ ] Estrutura de seções seguida
- [ ] Exemplos práticos incluídos
- [ ] Links internos funcionando
- [ ] Formatação consistente
- [ ] Ortografia revisada
- [ ] Metadados completos
- [ ] SUMMARY.md atualizado
- [ ] Diagramas Mermaid testados
- [ ] Blocos GitBook funcionando
- [ ] Imagens com alt text
- [ ] Responsividade verificada

### 🎯 Critérios de Aprovação
- **Clareza**: Usuário consegue seguir sem dúvidas
- **Completude**: Todas as informações necessárias estão presentes
- **Consistência**: Segue todos os padrões estabelecidos
- **Utilidade**: Resolve problemas reais do usuário
- **Atualidade**: Informações estão atualizadas
- **Compatibilidade**: Funciona corretamente no GitBook

## 📊 Métricas de Sucesso

### 🎯 Indicadores de Qualidade
- **Tempo de conclusão**: Usuário consegue completar tarefa rapidamente
- **Taxa de erro**: Baixa incidência de erros seguindo a documentação
- **Satisfação**: Feedback positivo dos usuários
- **Reutilização**: Documentos são consultados frequentemente
- **Navegação**: Facilidade para encontrar informações

### 📈 Processo de Melhoria
- **Colete** feedback dos usuários
- **Monitore** dúvidas frequentes
- **Atualize** baseado em mudanças do sistema
- **Revise** periodicamente a estrutura
- **Analise** métricas do GitBook
- **Otimize** conteúdo baseado em dados

---

## 🚀 Início Rápido

### 📋 Para Criar um Novo Documento
1. **Copie** o template apropriado (módulo/fluxo/caso-uso)
2. **Adapte** o cabeçalho com título e navegação
3. **Adicione** tags relevantes
4. **Preencha** as seções seguindo os padrões
5. **Inclua** exemplos práticos
6. **Use** blocos especiais GitBook quando apropriado
7. **Adicione** diagramas Mermaid se necessário
8. **Revise** usando o checklist de qualidade
9. **Teste** todos os links e funcionalidades
10. **Atualize** SUMMARY.md
11. **Publique** e monitore feedback

### 🔧 Para Atualizar Documentos Existentes
1. **Verifique** se segue os padrões atuais
2. **Atualize** formatação se necessário
3. **Revise** conteúdo e exemplos
4. **Teste** funcionalidades descritas
5. **Atualize** blocos GitBook obsoletos
6. **Verifique** diagramas Mermaid
7. **Atualize** data de modificação
8. **Documente** mudanças significativas
9. **Atualize** SUMMARY.md se necessário
10. **Teste** no GitBook antes de publicar

### 📋 LEMBRETE CRÍTICO: SUMMARY.md
🚨 **ATENÇÃO**: Toda vez que você:
- **Criar** um novo arquivo `.md`
- **Excluir** um arquivo existente
- **Renomear** um arquivo
- **Mover** um arquivo para outra pasta

**VOCÊ DEVE IMEDIATAMENTE** atualizar o `SUMMARY.md` para manter a navegação funcionando corretamente no GitBook.

---

## 📋 Gestão do SUMMARY.md (OBRIGATÓRIO)

### 🔄 Atualização Automática
**SEMPRE** que realizar qualquer uma das ações abaixo, você **DEVE** atualizar o arquivo `SUMMARY.md`:

#### 📄 Criação de Novos Documentos
- **Criar** novo arquivo `.md` em qualquer pasta
- **Adicionar** entrada correspondente no `SUMMARY.md`
- **Manter** hierarquia e estrutura existente
- **Usar** emoji e título apropriados

#### 🗑️ Exclusão de Documentos
- **Remover** entrada do `SUMMARY.md`
- **Verificar** se não há links quebrados
- **Ajustar** numeração se necessário

#### 📝 Renomeação de Arquivos
- **Atualizar** nome do arquivo no `SUMMARY.md`
- **Manter** estrutura de pastas
- **Verificar** links internos afetados

#### 📁 Reorganização de Estrutura
- **Mover** entradas para nova localização
- **Ajustar** hierarquia no `SUMMARY.md`
- **Atualizar** caminhos relativos

### 🎯 Padrões para SUMMARY.md

#### 📋 Estrutura Hierárquica
```markdown
## 🚀 Guias Iniciais
* [📚 Guias do White ERP](guias/index.md)
  * [🚀 Primeiros Passos](guias/primeiros-passos.md)
  * [🌐 Integração com E-commerce](guias/integracao-ecommerce.md)

## 📋 Módulos do Sistema
* [📋 Módulos do Sistema](modulos/index.md)
  * [👥 Módulo: Gestão de Cadastros](modulos/cadastros/index.md)
    * [👥 Cadastro de Clientes](modulos/cadastros/cadastro-de-clientes.md)
```

#### 🏷️ Nomenclatura Padrão
- **Use** emoji apropriado para cada tipo de documento
- **Mantenha** consistência nos títulos
- **Siga** padrão: `[Emoji Título](caminho/arquivo.md)`

#### 🔗 Caminhos Relativos
- **Sempre** use caminhos relativos à raiz
- **Exemplo**: `guias/integracao-ecommerce.md`
- **Não use** caminhos absolutos

### ⚠️ Regras Críticas

#### 🚨 NUNCA Esqueça
1. **Toda** alteração de estrutura = atualização do `SUMMARY.md`
2. **Verificar** se o GitBook pode processar as mudanças
3. **Testar** navegação após mudanças
4. **Manter** ordem lógica e hierárquica

#### ✅ Processo Obrigatório
```markdown
1. Criar/Alterar/Excluir documento
2. Atualizar SUMMARY.md imediatamente
3. Verificar estrutura e links
4. Testar navegação no GitBook
5. Confirmar alterações
```

#### 📊 Exemplo de Atualização
**Antes** (criar novo guia):
```markdown
## 🚀 Guias Iniciais
* [📚 Guias do White ERP](guias/index.md)
  * [🚀 Primeiros Passos](guias/primeiros-passos.md)
  * [⚙️ Configuração Inicial](guias/configuracao-inicial.md)
```

**Depois** (adicionar integração e-commerce):
```markdown
## 🚀 Guias Iniciais
* [📚 Guias do White ERP](guias/index.md)
  * [🚀 Primeiros Passos](guias/primeiros-passos.md)
  * [⚙️ Configuração Inicial](guias/configuracao-inicial.md)
  * [🌐 Integração com E-commerce](guias/integracao-ecommerce.md)
```

### 🔧 Validação do SUMMARY.md

#### 📋 Checklist de Validação
- [ ] Todos os arquivos `.md` estão listados
- [ ] Hierarquia está correta
- [ ] Emojis estão consistentes
- [ ] Caminhos estão corretos
- [ ] Não há links quebrados
- [ ] Ordem lógica mantida
- [ ] Indentação correta
- [ ] Sintaxe Markdown válida
- [ ] Compatível com GitBook

#### 🎯 Ferramentas de Verificação
- **GitBook**: Verificar se processa sem erros
- **Links internos**: Testar navegação
- **Estrutura**: Confirmar hierarquia lógica
- **Sintaxe**: Validar Markdown

---

## 📋 Templates Rápidos

### 📄 Template: Módulo
```markdown
# 🔧 [Nome do Módulo]

🏠 [Home](../../index.md) > 📋 [Módulos](../index.md) > **[Nome do Módulo]**

#modulo #[categoria] #[nivel]

---

## 📋 O que é

Descrição clara da funcionalidade do módulo.

## 🚀 Como Fazer

{% stepper %}
{% step %}
### Passo 1: [Título]
Descrição do primeiro passo
{% endstep %}

{% step %}
### Passo 2: [Título]
Descrição do segundo passo
{% endstep %}
{% endstepper %}

## 💡 Casos de Uso

Exemplos práticos de uso do módulo.

## 🚨 Pontos de Atenção

{% hint style="warning" %}
**⚠️ Atenção**: Cuidados importantes
{% endhint %}

---

## 📚 Documentação Relacionada
- [Documento relacionado](../link.md)

## 🏷️ Tags
`#modulo` `#categoria` `#nivel`

---

**Última atualização**: [Data]
**Versão do documento**: [Versão]
**Responsável**: [Nome]
```

### 🔄 Template: Fluxo
```markdown
# 🔄 [Nome do Fluxo]

🏠 [Home](../../index.md) > 🔄 [Fluxos](../index.md) > **[Nome do Fluxo]**

#fluxo #[categoria] #[nivel]

---

## 🎯 Visão Geral do Fluxo

Objetivo e benefícios do fluxo.

## 🔄 Visão Geral do Processo

```mermaid
graph TD
    A[Início] --> B[Processo]
    B --> C{Decisão}
    C -->|Sim| D[Ação 1]
    C -->|Não| E[Ação 2]
    D --> F[Fim]
    E --> F
```

## 📋 Etapas Detalhadas

1. **Etapa 1**: Descrição
2. **Etapa 2**: Descrição
3. **Etapa 3**: Descrição

## 💡 Dicas e Boas Práticas

{% hint style="info" %}
**💡 Dica**: Informações úteis
{% endhint %}

---

## 📚 Documentação Relacionada
- [Documento relacionado](../link.md)

## 🏷️ Tags
`#fluxo` `#categoria` `#nivel`

---

**Última atualização**: [Data]
**Versão do documento**: [Versão]
**Responsável**: [Nome]
```

---

**Versão**: 2.0  
**Última atualização**: Janeiro 2025  
**Responsável**: Equipe de Documentação White ERP

**Baseado em**: GitBook Best Practices e Context7 Documentation Standards